{"ast":null,"code":"import _regeneratorRuntime from \"/Users/emiliamena/Documents/coding/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/emiliamena/Documents/coding/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/emiliamena/Documents/coding/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emiliamena/Documents/coding/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/emiliamena/Documents/coding/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createSuper from \"/Users/emiliamena/Documents/coding/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/emiliamena/Documents/coding/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emiliamena/Documents/coding/catch-of-the-day/src/components/Inventory.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from \"../base\";\n\nvar Inventory = /*#__PURE__*/function (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  var _super = _createSuper(Inventory);\n\n  function Inventory() {\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      uid: null,\n      owner: null\n    };\n\n    _this.authHandler = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authData) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(authData); //look up current store in firebase database\n\n                _context.next = 3;\n                return base.fetch(_this.props.storeId, {\n                  context: _assertThisInitialized(_this)\n                });\n\n              case 3:\n                store = _context.sent;\n                console.log(store); //claim it if there is no owner\n\n                if (store.owner) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 8;\n                return base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                  data: authData.user.uid\n                });\n\n              case 8:\n                //set state of inventory to reflect current user\n                _this.setState({\n                  uid: authData.user.uid,\n                  owner: store.owner || authData.user.uid\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.authenticate = function (provider) {\n      //alert(provider)\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.logout = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Logging out!');\n              _context2.next = 3;\n              return firebase.auth().signOut();\n\n            case 3:\n              _this.setState({\n                uid: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var logout = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }\n      }, \"Log Out\"); //check if logged in\n\n      if (!this.state.uid) {\n        return /*#__PURE__*/React.createElement(Login, {\n          authenticate: this.authenticate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 20\n          }\n        });\n      } //check if they are not owner of store\n\n\n      if (this.state.uid !== this.state.owner) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        }, \"Sorry, you are not the owner!\"), logout);\n      }\n\n      ; //must be owner, render inventory\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inventory\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"Inventory\"), logout, Object.keys(this.props.fishes).map(function (key) {\n        return /*#__PURE__*/React.createElement(EditFishForm, {\n          key: key,\n          index: key,\n          fish: _this3.props.fishes[key],\n          updateFish: _this3.props.updateFish,\n          deleteFish: _this3.props.deleteFish,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 60\n          }\n        });\n      }), /*#__PURE__*/React.createElement(AddFishForm, {\n        addFish: this.props.addFish,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.props.loadSampleFishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \"Load Sample Fishes\"));\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFish: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["/Users/emiliamena/Documents/coding/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","console","log","fetch","props","storeId","context","store","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component","propTypes","object","func","loadSampleFish"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from \"../base\";\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFish: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({user});\n            }\n        })\n    };\n\n    authHandler = async (authData) => {\n        console.log(authData)\n        //look up current store in firebase database\n        const store = await base.fetch(this.props.storeId, { context: this});\n        console.log(store);\n        //claim it if there is no owner\n        if(!store.owner) {\n            //save it as our own\n            await base.post(`${this.props.storeId}/owner`, { data: authData.user.uid})\n        }\n        //set state of inventory to reflect current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n    };\n\n    authenticate = (provider) => {\n        //alert(provider)\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\n    };\n\n    logout = async () => {\n        console.log('Logging out!');\n        await firebase.auth().signOut();\n        this.setState({uid: null})\n    };\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out</button>\n\n        //check if logged in\n        if(!this.state.uid) {\n            return <Login authenticate={this.authenticate}/>\n        }\n        //check if they are not owner of store\n        if(this.state.uid !== this.state.owner) {\n            return <div>\n                <p>Sorry, you are not the owner!</p>\n                {logout}\n            </div>\n        };\n\n        //must be owner, render inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => <EditFishForm key={key} index={key} fish={this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish} />)}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        )\n    }\n}\n\nexport default Inventory;\n"]},"metadata":{},"sourceType":"module"}